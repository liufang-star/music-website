{"version":3,"sources":["webpack:///src/components/SongAudio.vue","webpack:///./src/components/SongAudio.vue?21f7","webpack:///./src/components/SongAudio.vue","webpack:///./src/assets/icon/index.js","webpack:///src/pages/SongPage.vue","webpack:///./src/pages/SongPage.vue?7c6f","webpack:///./src/pages/SongPage.vue"],"names":["SongAudio","name","computed","extends_default","Object","vuex_esm","watch","isPlay","this","togglePlay","methods","player","document","querySelector","play","pause","startPlay","ended","components_SongAudio","render","_h","$createElement","_c","_self","staticClass","attrs","id","controls","preload","src","url","on","canplay","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","ICON","SongPage","components","mixins","data","toggle","singerId","singerName","registerForm","introduction","lyric","tableData","tempDate","is_search","multipleSelection","centerDialogVisible","editVisible","delVisible","select_word","form","createTime","updateTime","pic","pageSize","currentPage","idx","BOFANG","ZANTING","slice","playIcon","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","item","value","includes","push","err","return","created","$route","query","getData","destroyed","$store","commit","_this2","api","getSongOfSingerId","then","res","catch","console","log","setSongUrl","state","HOST","uploadUrl","uploadSongUrl","beforeSongUpload","file","extension","substring","lastIndexOf","$message","message","type","handleCurrentChange","val","handleSongSuccess","code","notify","addSong","_this","FormData","getElementById","append","set","get","req","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","response","msg","open","send","handleEdit","row","getComment","$router","path","saveEdit","_this3","params","URLSearchParams","updateSongMsg","deleteRow","_this4","deleteSong","parseLyric","text","lines","split","pattern","result","test","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","replace","pages_SongPage","_vm","separator","_v","size","click","delAll","placeholder","model","callback","$$v","expression","$event","ref","staticStyle","width","border","height","selection-change","handleSelectionChange","label","align","scopedSlots","_u","key","fn","scope","overflow","getUrl","alt","aria-hidden","xlink:href","_e","prop","_l","index","_s","action","show-file-list","on-success","handleAvatarSuccess","before-upload","beforeAvatarUpload","$index","handleDelete","background","layout","current-page","page-size","total","length","current-change","title","visible","center","update:visible","slot","label-width","$set"],"mappings":"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","file":"static/js/2.cee51d17cf5ddfde5863.js","sourcesContent":["<template>\n  <div class=\"song-audio\">\n    <audio\n      id=\"player\"\n      controls=\"controls\"\n      preload=\"true\"\n      :src=\"url\"\n      @canplay=\"startPlay\"\n      @ended=\"ended\"\n    ></audio>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'song-audio',\n  computed: {\n    ...mapGetters([\n      'id', // 音乐id\n      'url', // 音乐链接\n      'isPlay' // 播放状态\n    ])\n  },\n  watch: {\n    // 监听播放还是暂停\n    isPlay: function () {\n      this.togglePlay()\n    }\n  },\n  methods: {\n    // 开始/暂停\n    togglePlay () {\n      let player = document.querySelector('#player')\n      if (this.isPlay) {\n        player.play()\n      } else {\n        player.pause()\n      }\n    },\n    // 获取歌曲链接后准备播放\n    startPlay () {\n      let player = document.querySelector('#player')\n      //  开始播放\n      player.play()\n    },\n    // 音乐播放结束时触发\n    ended () {\n      this.isPlay = false\n    }\n  }\n}\n</script>\n\n<style>\n#player {\n  display: none;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/SongAudio.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"song-audio\"},[_c('audio',{attrs:{\"id\":\"player\",\"controls\":\"controls\",\"preload\":\"true\",\"src\":_vm.url},on:{\"canplay\":_vm.startPlay,\"ended\":_vm.ended}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-d90eed58\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/SongAudio.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-d90eed58\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./SongAudio.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./SongAudio.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./SongAudio.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d90eed58\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./SongAudio.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/SongAudio.vue\n// module id = null\n// module chunks = ","const ICON = {\n  BOFANG: '#icon-bofanganniu', // 播放\n  ZANTING: '#icon-zanting' // 暂停\n}\n\nexport {\n  ICON\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/icon/index.js","<template>\n  <div class=\"table\">\n    <div class=\"crumbs\">\n      <el-breadcrumb separator=\"/\">\n        <el-breadcrumb-item>\n          <i class=\"el-icon-tickets\"></i> 歌曲信息\n        </el-breadcrumb-item>\n      </el-breadcrumb>\n    </div>\n    <div class=\"container\">\n      <div class=\"handle-box\">\n        <el-button type=\"primary\" size=\"mini\" class=\"handle-del mr10\" @click=\"delAll\">批量删除</el-button>\n        <el-input v-model=\"select_word\" size=\"mini\" placeholder=\"筛选关键词\" class=\"handle-input mr10\"></el-input>\n        <el-button type=\"primary\" size=\"mini\" @click=\"centerDialogVisible = true\">添加歌曲</el-button>\n      </div>\n      <el-table :data=\"data\" size=\"mini\" border style=\"width: 100%\" ref=\"multipleTable\" height=\"550px\" @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"40\"></el-table-column>\n        <el-table-column label=\"歌手图片\" width=\"110\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <div style=\"width: 80px; height: 80px; overflow: hidden\">\n              <img :src=\"getUrl(scope.row.pic)\" alt=\"\" style=\"width: 100%;\"/>\n            </div>\n            <div class=\"play\" @click=\"setSongUrl(scope.row.url, scope.row.name)\">\n              <div v-if=\"toggle !== scope.row.name\">\n                <svg class=\"icon\" aria-hidden=\"true\">\n                  <use :xlink:href=\"BOFANG\"></use>\n                </svg>\n              </div>\n              <div v-if=\"toggle === scope.row.name\">\n                <svg class=\"icon\" aria-hidden=\"true\">\n                  <use :xlink:href=\"playIcon\"></use>\n                </svg>\n              </div>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"歌名\" prop=\"name\" width=\"150\" align=\"center\"></el-table-column>\n        <el-table-column label=\"专辑\" prop=\"introduction\" width=\"150\" align=\"center\"></el-table-column>\n        <el-table-column label=\"歌词\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <ul style=\"height: 100px; overflow: scroll\">\n              <li>\n              <li v-for=\"(item, index) in parseLyric(scope.row.lyric)\" :key=\"index\">\n                {{ item}}\n              </li>\n            </ul>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"资源更新\" width=\"100\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-upload\n              class=\"upload-demo\"\n              :action=\"uploadUrl(scope.row.id)\"\n              :show-file-list=\"false\"\n              :on-success=\"handleAvatarSuccess\"\n              :before-upload=\"beforeAvatarUpload\"\n              >\n                <el-button size=\"mini\">更新图片</el-button>\n            </el-upload>\n            <br>\n            <el-upload\n              class=\"upload-demo change\"\n              :action=\"uploadSongUrl(scope.row.id)\"\n              :show-file-list=\"false\"\n              :on-success=\"handleSongSuccess\"\n              :before-upload=\"beforeSongUpload\">\n              <el-button size=\"mini\">更新歌曲</el-button>\n            </el-upload>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"评论\" width=\"80\" align=\"center\">\n            <template  slot-scope=\"scope\">\n                <el-button size=\"mini\" @click=\"getComment(data[scope.$index].id)\">评论</el-button>\n            </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"150\" align=\"center\">\n            <template slot-scope=\"scope\">\n                <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n                <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n            </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"pagination\">\n        <el-pagination\n          @current-change=\"handleCurrentChange\"\n          background\n          layout=\"total, prev, pager, next\"\n          :current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          :total=\"tableData.length\">\n        </el-pagination>\n      </div>\n    </div>\n\n    <!--添加歌曲-->\n    <el-dialog title=\"添加歌曲\" :visible.sync=\"centerDialogVisible\" width=\"400px\" center>\n      <el-form action=\"\" :model=\"registerForm\" id=\"tf\">\n        <div>\n          <label>歌曲名</label>\n          <el-input type=\"text\" name=\"name\"></el-input>\n        </div>\n        <div>\n          <label>专辑</label>\n          <el-input type=\"text\" value=\"\" name=\"introduction\"></el-input>\n        </div>\n        <div>\n          <label>歌词</label>\n          <el-input type=\"textarea\" value=\"\" name=\"lyric\"></el-input>\n        </div>\n        <div>\n          <label>歌曲上传</label>\n          <br>\n          <input type=\"file\" name=\"file\" id=\"upadte-file-input\">\n        </div>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"centerDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addSong\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 编辑弹出框 -->\n    <el-dialog title=\"编辑\" :visible.sync=\"editVisible\" width=\"400px\">\n      <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n        <el-form-item label=\"歌手-歌曲\" size=\"mini\">\n          <el-input v-model=\"form.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"简介\" size=\"mini\">\n          <el-input v-model=\"form.introduction\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"歌词\" size=\"mini\">\n          <el-input  type=\"textarea\" v-model=\"form.lyric\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"editVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" size=\"mini\" @click=\"saveEdit\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 删除提示框 -->\n    <el-dialog title=\"提示\" :visible.sync=\"delVisible\" width=\"300px\" center>\n      <div class=\"del-dialog-cnt\" align=\"center\">删除不可恢复，是否确定删除？</div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"delVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" size=\"mini\" @click=\"deleteRow\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport SongAudio from '../components/SongAudio'\nimport { mixin } from '../mixins'\nimport { mapGetters } from 'vuex'\nimport { ICON } from '../assets/icon/index'\nimport { HttpManager } from '../api/index'\n\nexport default {\n  name: 'song-page',\n  components: {\n    SongAudio\n  },\n  mixins: [mixin],\n  data () {\n    return {\n      toggle: false, // 控制播放图标状态\n      singerId: '',\n      singerName: '',\n      registerForm: {\n        name: '',\n        singerName: '',\n        introduction: '',\n        lyric: ''\n      },\n      tableData: [],\n      tempDate: [],\n      is_search: false,\n      multipleSelection: [], // 记录要删除的歌曲\n      centerDialogVisible: false,\n      editVisible: false,\n      delVisible: false,\n      select_word: '',\n      form: {\n        id: '',\n        singerId: '',\n        name: '',\n        introduction: '',\n        createTime: '',\n        updateTime: '',\n        pic: '',\n        lyric: '',\n        url: ''\n      },\n      pageSize: 5, // 页数\n      currentPage: 1, // 当前页\n      idx: -1,\n      BOFANG: ICON.BOFANG,\n      ZANTING: ICON.ZANTING\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'isPlay' // 播放状态\n    ]),\n    // 计算当前表格中的数据\n    data () {\n      return this.tableData.slice((this.currentPage - 1) * this.pageSize, this.currentPage * this.pageSize)\n    },\n    playIcon () {\n      if (this.isPlay) {\n        return this.ZANTING\n      } else {\n        return this.BOFANG\n      }\n    }\n  },\n  watch: {\n    select_word: function () {\n      if (this.select_word === '') {\n        this.tableData = this.tempDate\n      } else {\n        this.tableData = []\n        for (let item of this.tempDate) {\n          if (item.name.includes(this.select_word)) {\n            this.tableData.push(item)\n          }\n        }\n      }\n    }\n  },\n  created () {\n    this.singerId = this.$route.query.id\n    this.singerName = this.$route.query.name\n    this.getData()\n  },\n  destroyed () {\n    this.$store.commit('setIsPlay', false)\n  },\n  methods: {\n    // 获取歌曲\n    getData () {\n      this.tableData = []\n      this.tempDate = []\n      HttpManager.getSongOfSingerId(this.singerId).then((res) => {\n        this.tableData = res\n        this.tempDate = res\n        this.currentPage = 1\n      }).catch(err => {\n        console.log(err)\n      })\n    },\n    setSongUrl (url, name) {\n      this.$store.commit('setUrl', this.$store.state.HOST + url)\n      this.toggle = name\n      if (this.isPlay) {\n        this.$store.commit('setIsPlay', false)\n      } else {\n        this.$store.commit('setIsPlay', true)\n      }\n    },\n    // 更新歌曲图片\n    uploadUrl (id) {\n      return `${this.$store.state.HOST}/song/img/update?id=${id}`\n    },\n    // 更新歌曲url\n    uploadSongUrl (id) {\n      return `${this.$store.state.HOST}/song/url/update?id=${id}`\n    },\n    beforeSongUpload (file) {\n      var testmsg = file.name.substring(file.name.lastIndexOf('.') + 1)\n      const extension = testmsg === 'mp3'\n      if (!extension) {\n        this.$message({\n          message: '上传文件只能是mp3格式！',\n          type: 'error'\n        })\n      }\n      return extension\n    },\n    // 获取当前页\n    handleCurrentChange (val) {\n      this.currentPage = val\n    },\n    handleSongSuccess (res, file) {\n      if (res.code === 1) {\n        this.getData()\n        this.notify('上传成功', 'success')\n      } else {\n        this.notify('上传失败', 'error')\n      }\n    },\n    // 添加音乐\n    addSong () {\n      let _this = this\n      var form = new FormData(document.getElementById('tf'))\n      form.append('singerId', this.singerId)\n      form.set('name', this.singerName + '-' + form.get('name'))\n      if (!form.get('lyric')) {\n        form.set('lyric', '[00:00:00]暂无歌词')\n      }\n      var req = new XMLHttpRequest()\n      req.onreadystatechange = function () {\n        if (req.readyState === 4 && req.status === 200) {\n          let res = JSON.parse(req.response)\n          if (res.code) {\n            _this.getData()\n            _this.registerForm = {}\n            _this.notify(res.msg, 'success')\n          } else if (!res.code) {\n            _this.notify('上传失败', 'error')\n          }\n        }\n      }\n      req.open('post', `${_this.$store.state.HOST}/song/add`, false)\n      req.send(form)\n      _this.centerDialogVisible = false\n    },\n    // 编辑\n    handleEdit (row) {\n      this.idx = row.id\n      this.form = {\n        id: row.id,\n        singerId: row.singerId,\n        name: row.name,\n        introduction: row.introduction,\n        createTime: row.createTime,\n        updateTime: row.updateTime,\n        pic: row.pic,\n        lyric: row.lyric,\n        url: row.url\n      }\n      this.editVisible = true\n    },\n    getComment (id) {\n      this.$router.push({path: '/Comment', query: {id: id, type: 0}})\n    },\n    // 保存编辑\n    saveEdit () {\n      let params = new URLSearchParams()\n      params.append('id', this.form.id)\n      params.append('singerId', this.form.singerId)\n      params.append('name', this.form.name)\n      params.append('introduction', this.form.introduction)\n      params.append('lyric', this.form.lyric)\n      HttpManager.updateSongMsg(params)\n        .then(res => {\n          if (res) {\n            this.getData()\n            this.notify('编辑成功', 'success')\n          } else {\n            this.notify('编辑失败', 'error')\n          }\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      this.editVisible = false\n    },\n    // 确定删除\n    deleteRow () {\n      HttpManager.deleteSong(this.idx)\n        .then(response => {\n          if (response) {\n            this.getData()\n            this.notify('删除成功', 'success')\n          } else {\n            this.notify('删除失败', 'error')\n          }\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      this.delVisible = false\n    },\n    // 解析歌词\n    parseLyric (text) {\n      let lines = text.split('\\n')\n      let pattern = /\\[\\d{2}:\\d{2}.(\\d{3}|\\d{2})\\]/g\n      let result = []\n\n      // 对于歌词格式不对的特殊处理\n      if (!(/\\[.+\\]/.test(text))) {\n        return [text]\n      }\n      for (let item of lines) {\n        if (pattern.test(item)) {\n          let value = item.replace(pattern, '') // 存歌词\n          result.push(value)\n        }\n      }\n      return result\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n.handle-box {\n    margin-bottom: 20px;\n}\n.handle-input {\n    width: 300px;\n    display: inline-block;\n}\n.el-input__inner{\n  background-color: aqua\n}\n.play {\n    position: absolute;\n    z-index: 100;\n    width: 80px;\n    height: 80px;\n    top: 18px;\n    left: 15px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n}\n.icon {\n  width: 2em;\n  height: 2em;\n  color: white;\n  fill: currentColor;\n  overflow: hidden;\n}\n.pagination {\n    display: flex;\n    justify-content: center;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/SongPage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"table\"},[_c('div',{staticClass:\"crumbs\"},[_c('el-breadcrumb',{attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',[_c('i',{staticClass:\"el-icon-tickets\"}),_vm._v(\" 歌曲信息\\n      \")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"handle-box\"},[_c('el-button',{staticClass:\"handle-del mr10\",attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.delAll}},[_vm._v(\"批量删除\")]),_vm._v(\" \"),_c('el-input',{staticClass:\"handle-input mr10\",attrs:{\"size\":\"mini\",\"placeholder\":\"筛选关键词\"},model:{value:(_vm.select_word),callback:function ($$v) {_vm.select_word=$$v},expression:\"select_word\"}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.centerDialogVisible = true}}},[_vm._v(\"添加歌曲\")])],1),_vm._v(\" \"),_c('el-table',{ref:\"multipleTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.data,\"size\":\"mini\",\"border\":\"\",\"height\":\"550px\"},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"40\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"歌手图片\",\"width\":\"110\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticStyle:{\"width\":\"80px\",\"height\":\"80px\",\"overflow\":\"hidden\"}},[_c('img',{staticStyle:{\"width\":\"100%\"},attrs:{\"src\":_vm.getUrl(scope.row.pic),\"alt\":\"\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"play\",on:{\"click\":function($event){return _vm.setSongUrl(scope.row.url, scope.row.name)}}},[(_vm.toggle !== scope.row.name)?_c('div',[_c('svg',{staticClass:\"icon\",attrs:{\"aria-hidden\":\"true\"}},[_c('use',{attrs:{\"xlink:href\":_vm.BOFANG}})])]):_vm._e(),_vm._v(\" \"),(_vm.toggle === scope.row.name)?_c('div',[_c('svg',{staticClass:\"icon\",attrs:{\"aria-hidden\":\"true\"}},[_c('use',{attrs:{\"xlink:href\":_vm.playIcon}})])]):_vm._e()])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"歌名\",\"prop\":\"name\",\"width\":\"150\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"专辑\",\"prop\":\"introduction\",\"width\":\"150\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"歌词\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('ul',{staticStyle:{\"height\":\"100px\",\"overflow\":\"scroll\"}},[_c('li'),_vm._l((_vm.parseLyric(scope.row.lyric)),function(item,index){return _c('li',{key:index},[_vm._v(\"\\n              \"+_vm._s(item)+\"\\n            \")])})],2)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"资源更新\",\"width\":\"100\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-upload',{staticClass:\"upload-demo\",attrs:{\"action\":_vm.uploadUrl(scope.row.id),\"show-file-list\":false,\"on-success\":_vm.handleAvatarSuccess,\"before-upload\":_vm.beforeAvatarUpload}},[_c('el-button',{attrs:{\"size\":\"mini\"}},[_vm._v(\"更新图片\")])],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('el-upload',{staticClass:\"upload-demo change\",attrs:{\"action\":_vm.uploadSongUrl(scope.row.id),\"show-file-list\":false,\"on-success\":_vm.handleSongSuccess,\"before-upload\":_vm.beforeSongUpload}},[_c('el-button',{attrs:{\"size\":\"mini\"}},[_vm._v(\"更新歌曲\")])],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"评论\",\"width\":\"80\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.getComment(_vm.data[scope.$index].id)}}},[_vm._v(\"评论\")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"150\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleEdit(scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.handleDelete(scope.row.id)}}},[_vm._v(\"删除\")])]}}])})],1),_vm._v(\" \"),_c('div',{staticClass:\"pagination\"},[_c('el-pagination',{attrs:{\"background\":\"\",\"layout\":\"total, prev, pager, next\",\"current-page\":_vm.currentPage,\"page-size\":_vm.pageSize,\"total\":_vm.tableData.length},on:{\"current-change\":_vm.handleCurrentChange}})],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"添加歌曲\",\"visible\":_vm.centerDialogVisible,\"width\":\"400px\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.centerDialogVisible=$event}}},[_c('el-form',{attrs:{\"action\":\"\",\"model\":_vm.registerForm,\"id\":\"tf\"}},[_c('div',[_c('label',[_vm._v(\"歌曲名\")]),_vm._v(\" \"),_c('el-input',{attrs:{\"type\":\"text\",\"name\":\"name\"}})],1),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"专辑\")]),_vm._v(\" \"),_c('el-input',{attrs:{\"type\":\"text\",\"value\":\"\",\"name\":\"introduction\"}})],1),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"歌词\")]),_vm._v(\" \"),_c('el-input',{attrs:{\"type\":\"textarea\",\"value\":\"\",\"name\":\"lyric\"}})],1),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"歌曲上传\")]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('input',{attrs:{\"type\":\"file\",\"name\":\"file\",\"id\":\"upadte-file-input\"}})])]),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.centerDialogVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addSong}},[_vm._v(\"确 定\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"编辑\",\"visible\":_vm.editVisible,\"width\":\"400px\"},on:{\"update:visible\":function($event){_vm.editVisible=$event}}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"歌手-歌曲\",\"size\":\"mini\"}},[_c('el-input',{model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"简介\",\"size\":\"mini\"}},[_c('el-input',{model:{value:(_vm.form.introduction),callback:function ($$v) {_vm.$set(_vm.form, \"introduction\", $$v)},expression:\"form.introduction\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"歌词\",\"size\":\"mini\"}},[_c('el-input',{attrs:{\"type\":\"textarea\"},model:{value:(_vm.form.lyric),callback:function ($$v) {_vm.$set(_vm.form, \"lyric\", $$v)},expression:\"form.lyric\"}})],1)],1),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.editVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.saveEdit}},[_vm._v(\"确 定\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"提示\",\"visible\":_vm.delVisible,\"width\":\"300px\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.delVisible=$event}}},[_c('div',{staticClass:\"del-dialog-cnt\",attrs:{\"align\":\"center\"}},[_vm._v(\"删除不可恢复，是否确定删除？\")]),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.delVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.deleteRow}},[_vm._v(\"确 定\")])],1)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-d3028fbe\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/SongPage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-d3028fbe\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./SongPage.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./SongPage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./SongPage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d3028fbe\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./SongPage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-d3028fbe\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/SongPage.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}